import numpy as np
from sklearn.datasets import load_boston
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
---------------------------------------------------------------------------------------------
# Load the Boston Housing dataset
boston = load_boston()

# Split the data into features and target
X = boston.data
y = boston.target

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
----------------------------------------------------------------------------------------------
# Standardize the features
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)
-------------------------------------------------------------------------------------------------
# Define the model
model = Sequential()
model.add(Dense(64, activation='relu', input_shape=(X_train.shape[1],)))
model.add(Dense(64, activation='relu'))
model.add(Dense(1))

# Compile the model
model.compile(optimizer='adam', loss='mean_squared_error')

# Train the model
model.fit(X_train_scaled, y_train, batch_size=32, epochs=100, verbose=1)
-----------------------------------------------------------------------------------------------
# Make predictions on the test set
y_pred = model.predict(X_test_scaled)

# Print the first 5 predictions and actual values
for i in range(5):
    print("Predicted: {:.2f}, Actual: {:.2f}".format(y_pred[i][0], y_test[i]))
-----------------------------------------------------------------------------------------------
from sklearn.metrics import mean_squared_error

# Calculate mean squared error
mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error: {:.2f}".format(mse))

